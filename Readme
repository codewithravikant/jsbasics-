Basic JavaScript
JavaScript is a scripting language you can use to make web pages interactive. It is one of the core technologies of the web, along with HTML and CSS, and is supported by all modern browsers.

In this course, you'll learn fundamental programming concepts in JavaScript. You'll start with basic data structures like numbers and strings. Then you'll learn to work with arrays, objects, functions, loops, if/else statements, and more.


Collapse course
113/113
Comment Your JavaScript Code
Declare JavaScript Variables
Storing Values with the Assignment Operator
Assigning the Value of One Variable to Another
Initializing Variables with the Assignment Operator
Declare String Variables
Understanding Uninitialized Variables
Understanding Case Sensitivity in Variables
Explore Differences Between the var and let Keywords
Declare a Read-Only Variable with the const Keyword
Add Two Numbers with JavaScript
Subtract One Number from Another with JavaScript
Multiply Two Numbers with JavaScript
Divide One Number by Another with JavaScript
Increment a Number with JavaScript
Decrement a Number with JavaScript
Create Decimal Numbers with JavaScript
Multiply Two Decimals with JavaScript
Divide One Decimal by Another with JavaScript
Finding a Remainder in JavaScript
Compound Assignment With Augmented Addition
Compound Assignment With Augmented Subtraction
Compound Assignment With Augmented Multiplication
Compound Assignment With Augmented Division
Escaping Literal Quotes in Strings
Quoting Strings with Single Quotes
Escape Sequences in Strings
Concatenating Strings with Plus Operator
Concatenating Strings with the Plus Equals Operator
Constructing Strings with Variables
Appending Variables to Strings
Find the Length of a String
Use Bracket Notation to Find the First Character in a String
Understand String Immutability
Use Bracket Notation to Find the Nth Character in a String
Use Bracket Notation to Find the Last Character in a String
Use Bracket Notation to Find the Nth-to-Last Character in a String
Word Blanks
Store Multiple Values in one Variable using JavaScript Arrays
Nest one Array within Another Array
Access Array Data with Indexes
Modify Array Data With Indexes
Access Multi-Dimensional Arrays With Indexes
Manipulate Arrays With push()
Manipulate Arrays With pop()
Manipulate Arrays With shift()
Manipulate Arrays With unshift()
Shopping List
Write Reusable JavaScript with Functions
Passing Values to Functions with Arguments
Return a Value from a Function with Return
Global Scope and Functions
Local Scope and Functions
Global vs. Local Scope in Functions
Understanding Undefined Value returned from a Function
Assignment with a Returned Value
Stand in Line
Understanding Boolean Values
Use Conditional Logic with If Statements
Comparison with the Equality Operator
Comparison with the Strict Equality Operator
Practice comparing different values
Comparison with the Inequality Operator
Comparison with the Strict Inequality Operator
Comparison with the Greater Than Operator
Comparison with the Greater Than Or Equal To Operator
Comparison with the Less Than Operator
Comparison with the Less Than Or Equal To Operator
Comparisons with the Logical And Operator
Comparisons with the Logical Or Operator
Introducing Else Statements
Introducing Else If Statements
Logical Order in If Else Statements
Chaining If Else Statements
Golf Code
Selecting from Many Options with Switch Statements
Adding a Default Option in Switch Statements
Multiple Identical Options in Switch Statements
Replacing If Else Chains with Switch
Returning Boolean Values from Functions
Return Early Pattern for Functions
Counting Cards
Build JavaScript Objects
Accessing Object Properties with Dot Notation
Accessing Object Properties with Bracket Notation
Accessing Object Properties with Variables
Updating Object Properties
Add New Properties to a JavaScript Object
Delete Properties from a JavaScript Object
Using Objects for Lookups
Testing Objects for Properties
Manipulating Complex Objects
Accessing Nested Objects
Accessing Nested Arrays
Record Collection
Iterate with JavaScript While Loops
Iterate with JavaScript For Loops
Iterate Odd Numbers With a For Loop
Count Backwards With a For Loop
Iterate Through an Array with a For Loop
Nesting For Loops
Iterate with JavaScript Do...While Loops
Replace Loops using Recursion
Profile Lookup
Generate Random Fractions with JavaScript
Generate Random Whole Numbers with JavaScript
Generate Random Whole Numbers within a Range
Use the parseInt Function
Use the parseInt Function with a Radix
Use the Conditional (Ternary) Operator
Use Multiple Conditional (Ternary) Operators
Use Recursion to Create a Countdown
Use Recursion to Create a Range of Numbers
ES6
ECMAScript, or ES, is a standardized version of JavaScript. Because all major browsers follow this specification, the terms ECMAScript and JavaScript are interchangeable.

Most of the JavaScript you've learned up to this point was in ES5 (ECMAScript 5), which was finalized in 2009. While you can still write programs in ES5, JavaScript is constantly evolving, and new features are released every year.

ES6, released in 2015, added many powerful new features to the language. In this course, you'll learn these new features, including arrow functions, destructuring, classes, promises, and modules.


Collapse course
29/29
Compare Scopes of the var and let Keywords
Mutate an Array Declared with const
Prevent Object Mutation
Use Arrow Functions to Write Concise Anonymous Functions
Write Arrow Functions with Parameters
Set Default Parameters for Your Functions
Use the Rest Parameter with Function Parameters
Use the Spread Operator to Evaluate Arrays In-Place
Use Destructuring Assignment to Extract Values from Objects
Use Destructuring Assignment to Assign Variables from Objects
Use Destructuring Assignment to Assign Variables from Nested Objects
Use Destructuring Assignment to Assign Variables from Arrays
Use Destructuring Assignment with the Rest Parameter to Reassign Array Elements
Use Destructuring Assignment to Pass an Object as a Function's Parameters
Create Strings using Template Literals
Write Concise Object Literal Declarations Using Object Property Shorthand
Write Concise Declarative Functions with ES6
Use class Syntax to Define a Constructor Function
Use getters and setters to Control Access to an Object
Create a Module Script
Use export to Share a Code Block
Reuse JavaScript Code Using import
Use * to Import Everything from a File
Create an Export Fallback with export default
Import a Default Export
Create a JavaScript Promise
Complete a Promise with resolve and reject
Handle a Fulfilled Promise with then
Handle a Rejected Promise with catch
Regular Expressions

/....


Expand courses
Not Passed0/31
Regular Expressions
Regular expressions, often shortened to "regex" or "regexp", are patterns that help programmers match, search, and replace text. Regular expressions are very powerful, but can be hard to read because they use special characters to make more complex, flexible matches.

In this course, you'll learn how to use special characters, capture groups, positive and negative lookaheads, and other techniques to match any text you want.


Expand courses
Not Passed0/33
Debugging
Debugging is the process of going through your code, finding any issues, and fixing them.

Issues in code generally come in three forms: syntax errors that prevent your program from running, runtime errors where your code has unexpected behavior, or logical errors where your code doesn't do what you intended.

In this course, you'll learn how to use the JavaScript console to debug programs and prevent common issues before they happen.


Expand courses
Not Passed0/12
Basic Data Structures
Data can be stored and accessed in many ways. You already know some common JavaScript data structures — arrays and objects.

In this Basic Data Structures course, you'll learn more about the differences between arrays and objects, and which to use in different situations. You'll also learn how to use helpful JS methods like splice() and Object.keys() to access and manipulate data.


Expand courses
Not Passed0/20
Basic Algorithm Scripting
An algorithm is a series of step-by-step instructions that describe how to do something.

To write an effective algorithm, it helps to break a problem down into smaller parts and think carefully about how to solve each part with code.

In this course, you'll learn the fundamentals of algorithmic thinking by writing algorithms that do everything from converting temperatures to handling complex 2D arrays.


Expand courses
Not Passed0/16
Object Oriented Programming
OOP, or Object Oriented Programming, is one of the major approaches to the software development process. In OOP, objects and classes organize code to describe things and what they can do.

In this course, you'll learn the basic principles of OOP in JavaScript, including the this keyword, prototype chains, constructors, and inheritance.


Expand courses
Not Passed0/26
Functional Programming
Functional Programming is another popular approach to software development. In Functional Programming, code is organized into smaller, basic functions that can be combined to build complex programs.

In this course, you'll learn the core concepts of Functional Programming including pure functions, how to avoid mutations, and how to write cleaner code with methods like .map() and .filter().


Expand courses
Not Passed0/24
Intermediate Algorithm Scripting
Now that you know the basics of algorithmic thinking, along with OOP and Functional Programming, test your skills with the Intermediate Algorithm Scripting challenges.


Expand courses
Not Passed0/21
JavaScript Algorithms and Data Structures Projects
This is it — time to put your new JavaScript skills to work. These projects are similar to the algorithm scripting challenges you've done before – just much more difficult.

Complete these 5 JavaScript projects to earn the JavaScript Algorithms and Data Structures certification.

Palindrome Checker
Not Passed
Roman Numeral Converter
Not Passed
Caesars Cipher
Not Passed
Telephone Number Validator
Not Passed
Cash Register
Not Passed
Claim Your Certification
Complete the following steps to claim and view your JavaScript Algorithms and Data Structures Certification

Collapse courses
Not Passed4/5
Passed
Accept our Academic Honesty Policy
Not Passed
Complete JavaScript Algorithms and Data Structures Certification Projects
Passed
Set your profile settings to public
Passed
Set your certification settings to public
Passed
Set your name, and make it public
